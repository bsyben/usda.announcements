idcol = TRUE
)
install.packages("data.table")
library(data.table)
dt <- rbindlist(
c(dt, dt2),
idcol = TRUE
)
View(dt)
fwrite(
dt,
file = "R//temp.csv",
dateTimeAs = "write.csv"
)
fwrite(
dt,
file = "R://temp.csv",
dateTimeAs = "write.csv"
)
library(Rblpapi)
library(data.table)
con <- blpConnect()
ticker <- list(
"LHM9 Comdty",
"LHN9 Comdty",
"LHQ9 Comdty",
"LHV9 Comdty",
"LHZ9 Comdty",
"LHG0 Comdty",
"LHJ0 Comdty",
"LHK0 Comdty",
"LHM0 Comdty",
"LHN0 Comdty",
"LHQ0 Comdty",
"LHV0 Comdty",
"LHZ0 Comdty",
"LHG1 Comdty",
"LHJ1 Comdty",
"LHK1 Comdty",
"LHM1 Comdty",
"LHN1 Comdty"
)
ticker <- setNames(ticker, ticker)
dt <- lapply(
ticker,
function(x) {
bdh(
securities  = x,
fields = c("PX_OPEN","PX_HIGH","PX_LOW", "PX_LAST", "DAILY_LIMIT_UP", "DAILY_LIMIT_DOWN"),
start.date = as.Date("2018-11-30")
)
}
)
dt <- lapply(
ticker,
function(x) {
bdh(
securities  = x,
fields = c("PX_OPEN","PX_HIGH","PX_LOW", "PX_LAST", "PX_VOLUME", "OPEN_INT", "DAILY_LIMIT_UP", "DAILY_LIMIT_DOWN"),
start.date = as.Date("2018-11-30")
)
}
)
dt <- rbindlist(
dt,
use.names = TRUE
)
View(dt)
dt <- lapply(
ticker,
function(x) {
bdh(
securities  = x,
fields = c("PX_OPEN","PX_HIGH","PX_LOW", "PX_LAST", "PX_VOLUME", "OPEN_INT", "DAILY_LIMIT_UP", "DAILY_LIMIT_DOWN"),
start.date = as.Date("2018-11-30")
)
}
)
dt <- rbindlist(
dt,
use.names = TRUE,
idcol = TRUE
)
View(dt)
dt[date == "2019-09-12"]
dt[date == "2019-09-11"]
fwrite(
dt,
file = "R://temp.csv",
dateTimeAs = "write.csv"
)
devtools::create("usda.announcements")
key="eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjQ3NzJ9.J_iSIoycXn2FhgZzR53rYuyfxNoSE1F6RfhOsaagrAs"
is.character(key)
length(key)
nchar(key)
start_date <- "2008-01-01"
end_date <- "2012-03-01"
start_date <- as.Date(start_date)
start_date
end_date <- as.Date(end_date)
end_date
latest <- ifelse(latest,"true","false")
latest <- F
latest <- ifelse(latest,"true","false")
identifier <- "wasde"
url <- paste0("https://usda.library.cornell.edu/api/v1/release/findByIdentifier/",identifier,
"?latest=",latest,"&start_date=",start_date,"&end_date=",end_date)
url
Results <- GET(url=url,add_headers(accept="application/json",Authorization=paste("Bearer",key,sep=" ")))
Results <- httr::GET(url=url,add_headers(accept="application/json",Authorization=paste("Bearer",key,sep=" ")))
Results <- httr::GET(url=url,httr::add_headers(accept="application/json",Authorization=paste("Bearer",key,sep=" ")))
Results <- httr::content(Results,"parsed")
announcement_dates <- unlist(purrr::map(Results,purrr::pluck,"release_datetime"))
announcement_dates
devtools::document()
setwd("usda.announcements/")
devtools::document()
library(usda.announcements)
library(usda.announcements)
library(usda.announcements)
start_date = "2009-01-02"
end_date = "2018-05-22"
identifier = "wasde"
key="eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjQ3NzJ9.J_iSIoycXn2FhgZzR53rYuyfxNoSE1F6RfhOsaagrAs"
latest=F
if(!is.character(key)){
stop("The api key must be a string")
}
start_date <- as.Date(start_date)
end_date <- as.Date(end_date)
latest <- ifelse(latest,"true","false")
if(!is.character(identifier)){
stop("identifier must be a string, such as wasde")
}
url <- paste0("https://usda.library.cornell.edu/api/v1/release/findByIdentifier/",identifier,
"?latest=",latest,"&start_date=",start_date,"&end_date=",end_date)
Results <- httr::RETRY("GET",url=url,httr::add_headers(accept="application/json",Authorization=paste("Bearer",key,sep=" ")),times=5)
Results <- httr::content(Results,"parsed")
Results
library(data.table)
install.packages("data.table")
library(data.table)
?rbindlist
str(Results)
rbindlist(rbindlist(Results))
rbindlist(
lapply(data.table, rbindlist)
)
rbindlist(
Results,fill = T
)
start_date="2019-01-01"
end_date="2020-01-01"
if(!is.character(key)){
stop("The api key must be a string")
}
start_date <- as.Date(start_date)
end_date <- as.Date(end_date)
latest <- ifelse(latest,"true","false")
if(!is.character(identifier)){
stop("identifier must be a string, such as wasde")
}
url <- paste0("https://usda.library.cornell.edu/api/v1/release/findByIdentifier/",identifier,
"?latest=",latest,"&start_date=",start_date,"&end_date=",end_date)
Results <- httr::RETRY("GET",url=url,httr::add_headers(accept="application/json",Authorization=paste("Bearer",key,sep=" ")),times=5)
Results <- httr::content(Results,"parsed")
rbindlist(Results,fill = T)
library(httr)
library(jsonlite)
library(purrr)
library(DBI)
library(usda.announcements)
WASDE_dates <- release_dates(start_date = "2009-01-02",end_date = "2018-05-22",identifier = "wasde")
setDT(WASDE_dates)
setDT(list(WASDE_dates))
WASDE_dates
WASDE_dates[,Announcement:='WASDE']
WASDE_dates <- cbind(WASDE_dates,"WASDE")
WASDE_dates
WASDE_dates <- cbind.data.frame(WASDE_dates,"WASDE")
WASDE_dates
WASDE_dates <- release_dates(start_date = "2009-01-02",end_date = "2018-05-22",identifier = "wasde")
GS_dates <- release_dates(start_date = "2009-01-02",end_date = "2018-05-22",identifier = "GraiStoc")
PP_dates <- release_dates(start_date = "2009-01-02",end_date = "2018-05-22",identifier = "ProsPlan")
CP_dates <- release_dates(start_date = "2009-01-02",end_date = "2018-05-22",identifier = "CropProd")
Acreage_dates <- release_dates(start_date = "2009-01-02",end_date = "2018-05-22",identifier = "Acre")
WASDE_dates <- cbind.data.frame(WASDE_dates,"WASDE")
WASDE_dates
colnames(WASDE_dates) <- c("Date","Announcement")
WASDE_dates
GS_dates <- cbind.data.frame(GS_dates,"GS")
colnames(GS_dates) <- c("Date","Announcement")
PP_dates <- cbind.data.frame(PP_dates,"PP")
colnames(PP_dates) <- c("Date","Announcement")
CP_dates <- cbind.data.frame(CP_dates,"CP")
colnames(CP_dates) <- c("Date","Announcement")
Acreage_dates <- cbind.data.frame(Acreage_dates,"Acreage")
colnames(Acreage_dates) <- c("Date","Announcement")
Acreage_dates
install.packages("dplyr")
dplyr::bind_rows(WASDE_dates,GS_dates,PP_dates,CP_dates,Acreage_dates)
Announcement_dates<- dplyr::bind_rows(WASDE_dates,GS_dates,PP_dates,CP_dates,Acreage_dates)
Announcement_dates<- dplyr::bind_rows(WASDE_dates,GS_dates,PP_dates,CP_dates,Acreage_dates)
setDT(Announcement_dates)
Announcement_dates
dcast.data.table(Announcement_dates,Date~Announcement_dates)
dcast.data.table(Announcement_dates,Date~Announcement_dates,value.var = "Announcement_dates")
dcast.data.table(Announcement_dates,Date~Announcement_dates,value.var = "Announcement")
dcast.data.table(Announcement_dates,Date~Announcement,value.var = "Announcement")
Announcement_dates<- dcast.data.table(Announcement_dates,Date~Announcement,value.var = "Announcement")
Announcement_dates
Announcement_dates[!is.na(Acreage),]
Announcement_dates[!is.na(GS),]
Announcement_dates[!is.na(PP),]
Announcement_dates[!is.na(WASDE),]
Announcement_dates[!is.na(WASDE),Date]
Announcement_dates[!is.na(WASDE),class(Date)]
library(usda.announcements)
WASDE_dates <- release_dates(start_date = "2009-01-02",end_date = "2018-05-22",identifier = "wasde")
WASDE_dates
GS_dates <- release_dates(start_date = "2009-01-02",end_date = "2018-05-22",identifier = "GraiStoc")
PP_dates <- release_dates(start_date = "2009-01-02",end_date = "2018-05-22",identifier = "ProsPlan")
CP_dates <- release_dates(start_date = "2009-01-02",end_date = "2018-05-22",identifier = "CropProd")
Acreage_dates <- release_dates(start_date = "2009-01-02",end_date = "2018-05-22",identifier = "Acre")
Announcement_dates<- dplyr::bind_rows(WASDE_dates,GS_dates,PP_dates,CP_dates,Acreage_dates)
setDT(Announcement_dates)
Announcement_dates
Announcement_dates<- dcast.data.table(Announcement_dates,Announcement_dates~identifier,value.var = "identifier")
Announcement_dates<- dcast.data.table(Announcement_dates,announcement_dates~identifier,value.var = "identifier")
Announcement_dates[!is.na(WASDE),class(Date)]
Announcement_dates
Announcement_dates[!is.na(wasde),class(Date)]
Announcement_dates[!is.na(wasde),]
library(usda.announcements)
library(httr)
library(jsonlite)
library(purrr)
library(DBI)
library(usda.announcements)
WASDE_dates <- release_dates(start_date = "2009-01-02",end_date = "2018-05-22",pubid = "3t945q76s")
WASDE_dates <- release_dates(start_date = "2009-01-02",end_date = "2018-05-22",pubid = "3t945q76s",key = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjQ3NzJ9.J_iSIoycXn2FhgZzR53rYuyfxNoSE1F6RfhOsaagrAs")
WASDE_dates
latest <- F
start_date = "2009-01-02"
end_date = "2018-05-22"
pubid = "3t945q76s"
key="eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjQ3NzJ9.J_iSIoycXn2FhgZzR53rYuyfxNoSE1F6RfhOsaagrAs"
url <- paste0("https://usda.library.cornell.edu/api/v1/release/findByPubId/",pubid,
"?latest=",latest,"&start_date=",start_date,"&end_date=",end_date)
Results <- httr::RETRY("GET",url=url,httr::add_headers(accept="application/json",Authorization=paste("Bearer",key,sep=" ")),times=5)
Results <- httr::content(Results,"parsed")
Results
announcement_name <- unlist(purrr::map(Results,purrr::pluck,"title"))
announcement_name
announcement_dates <- cbind.data.frame(announcement_dates,announcement_name)
announcement_name <- unlist(purrr::map(Results,purrr::pluck,"title"))
announcement_dates <- unlist(purrr::map(Results,purrr::pluck,"release_datetime"))
announcement_dates <- cbind.data.frame(announcement_dates,announcement_name)
announcement_dates
library(usda.announcements)
library(httr)
library(jsonlite)
library(purrr)
library(DBI)
library(usda.announcements)
key="eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjQ3NzJ9.J_iSIoycXn2FhgZzR53rYuyfxNoSE1F6RfhOsaagrAs"
WASDE_dates <- release_dates(start_date = "2009-01-02",end_date = "2018-05-22",pubid = "3t945q76s",key = key)
GS_dates <- release_dates(start_date = "2009-01-02",end_date = "2018-05-22",pubid = "xg94hp534")
PP_dates <- release_dates(start_date = "2009-01-02",end_date = "2018-05-22",pubid = "x633f100h")
CP_dates <- release_dates(start_date = "2009-01-02",end_date = "2018-05-22",pubid = "tm70mv177")
Acreage_dates <- release_dates(start_date = "2009-01-02",end_date = "2018-05-22",pubid = "j098zb09z")
GS_dates <- release_dates(start_date = "2009-01-02",end_date = "2018-05-22",pubid = "xg94hp534")
start_date
end_date
pubid
pubid <- "xg94hp534"
key
if(!is.character(key)){
stop("The api key must be a string")
}
start_date <- as.Date(start_date)
end_date <- as.Date(end_date)
latest <- ifelse(latest,"true","false")
if(!is.character(pubid)){
stop("pubid must be a string, such as wasde")
}
url <- paste0("https://usda.library.cornell.edu/api/v1/release/findByPubId/",pubid,
"?latest=",latest,"&start_date=",start_date,"&end_date=",end_date)
Results <- httr::RETRY("GET",url=url,httr::add_headers(accept="application/json",Authorization=paste("Bearer",key,sep=" ")),times=5)
Results <- httr::content(Results,"parsed")
announcement_dates <- unlist(purrr::map(Results,purrr::pluck,"release_datetime"))
announcement_name <- unlist(purrr::map(Results,purrr::pluck,"title"))
announcement_dates <- cbind.data.frame(announcement_dates,announcement_name)
announcement_dates
GS_dates <- release_dates(start_date = "2009-01-02",end_date = "2018-05-22",pubid = "xg94hp534")
WASDE_dates <- release_dates(start_date = "2009-01-02",end_date = "2018-05-22",pubid = "3t945q76s",key = key)
GS_dates <- release_dates(start_date = "2009-01-02",end_date = "2018-05-22",pubid = "xg94hp534",key = key)
PP_dates <- release_dates(start_date = "2009-01-02",end_date = "2018-05-22",pubid = "x633f100h",key = key)
CP_dates <- release_dates(start_date = "2009-01-02",end_date = "2018-05-22",pubid = "tm70mv177",key = key)
Acreage_dates <- release_dates(start_date = "2009-01-02",end_date = "2018-05-22",pubid = "j098zb09z",key = key)
Announcement_dates<- dplyr::bind_rows(WASDE_dates,GS_dates,PP_dates,CP_dates,Acreage_dates)
setDT(Announcement_dates)
library(data.table)
setDT(Announcement_dates)
Announcement_dates<- dcast.data.table(Announcement_dates,announcement_dates~announcement_name,value.var = "identifier")
Announcement_dates<- dcast.data.table(Announcement_dates,announcement_dates~announcement_name,value.var = "announcement_name")
Announcement_dates
library(usda.announcements)
?release_dates
library(usda.announcements)
?release_dates
usda.announcements::release_dates
?usda.announcements::release_dates
library(usda.announcements)
?usda.announcements::release_dates
library(usda.announcements)
library(httr)
library(jsonlite)
library(purrr)
library(DBI)
library(data.table)
library(usda.announcements)
key="eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjQ3NzJ9.J_iSIoycXn2FhgZzR53rYuyfxNoSE1F6RfhOsaagrAs"
WASDE_dates <- release_dates(start_date = "2009-01-02",end_date = "2018-05-22",pubid = "3t945q76s",key = key)
WASDE_dates
library(usda.announcements)
document()
library(devtools)
document()
library(usda.announcements)
?release_dates
library(usda.announcements)
library(devtools)
document()
library(usda.announcements)
?release_dates
library(usda.announcements)
library(httr)
library(jsonlite)
library(purrr)
library(DBI)
library(data.table)
library(usda.announcements)
key="eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjQ3NzJ9.J_iSIoycXn2FhgZzR53rYuyfxNoSE1F6RfhOsaagrAs"
CP_dates <- release_dates(start_date = "2009-01-02",end_date = "2018-05-22",pubid = "tm70mv177",key = key)
CP_dates
?httr::RETRY
?httr::POST
?authenticate
?add_headers()
?handle()
?add_headers()
add_headers(Content-Type=application/json)
user.email <- "bsyben@gmail.com"
user.password <- "n!3TLZdqLgWjDwL"
POST(url="https://usda.library.cornell.edu/user_token",authenticate(user.email,user.password),add_headers("application/json"))
POST(url="https://usda.library.cornell.edu/user_token",authenticate(user.email,user.password),add_headers(accept="*/*",Content-Type="multipart/form-data:"))
?curl
POST(url="https://usda.library.cornell.edu/user_token",authenticate(user.email,user.password),add_headers(accept="*/*",content_type="multipart/form-data:"))
POST(url="https://usda.library.cornell.edu/user_token",body = list(email=user.email,password=user.password),add_headers(accept="*/*",content_type="multipart/form-data:"))
POST(url="https://usda.library.cornell.edu/user_token",authenticate(user.email,user.password),add_headers(accept="*/*",content_type="multipart/form-data:"))
?httr::content_type
POST(url="https://usda.library.cornell.edu/user_token",authenticate(user.email,user.password),add_headers(accept="*/*",content_type("multipart/form-data:")))
POST(url="https://usda.library.cornell.edu/user_token",authenticate(user.email,user.password),add_headers(accept="*/*"),content_type("multipart/form-data:"))
POST(url="https://usda.library.cornell.edu/user_token",authenticate(user.email,user.password),add_headers(accept="*/*"),content_type())
POST(url="https://usda.library.cornell.edu/user_token",authenticate(user.email,user.password),add_headers(accept="*/*"),content_type_json())
user.email <- "bsyben@gmail.com"
user.password <- "n!3TLZdqLgWjDwL"
POST(url="https://usda.library.cornell.edu/user_token",authenticate(user.email,user.password),add_headers(accept="*/*"),content_type_json())
POST(url="https://usda.library.cornell.edu/user_token",authenticate(user.email,user.password),accept("*/*"),content_type_json())
POST(url="https://usda.library.cornell.edu/user_token",authenticate(user.email,user.password),accept("*/*"),content_type("multipart/form-data:"))
POST(url="https://usda.library.cornell.edu/user_token",authenticate(user.email,user.password),accept("*/*"),content_type_json())
httr::add_headers()
?httr::add_headers()
POST(url="https://usda.library.cornell.edu/user_token",httr::add_headers('accept'= '*/*','Content-Type'='multipart/form-data:'))
httr::POST()
?httr::POST()
POST(url="https://usda.library.cornell.edu/user_token",httr::add_headers('accept'= '*/*','Content-Type'='multipart/form-data:'),
body='auth[email]:bsyben@gmail.com,auth[password]:n!3TLZdqLgWjDwL')
POST(url="https://usda.library.cornell.edu/user_token",httr::add_headers('accept'= '*/*','Content-Type'='multipart/form-data:'),
body=list('auth[email]'=user.email,"auth[password]"=user.password)
url <- paste0("https://usda.library.cornell.edu/api/v1/release/findByPubId/",pubid,
"?latest=",latest,"&start_date=",start_date,"&end_date=",end_date)
Results <- httr::RETRY("POST",url=url,httr::add_headers(accept="application/json",Authorization=paste("Bearer",key,sep=" ")),times=5)
Results <- httr::content(Results,"parsed")
}
POST(url="https://usda.library.cornell.edu/user_token",httr::add_headers('accept'= '*/*','Content-Type'='multipart/form-data:'),
body=list('auth[email]'=user.email,"auth[password]"=user.password))
POST(url="https://usda.library.cornell.edu/user_token",httr::add_headers('accept'= '*/*','Content-Type'='multipart/form-data:'),
body=list(auth=list(email=user.email,password=user.password)))
POST(url="https://usda.library.cornell.edu/user_token",httr::add_headers('accept'= '*/*','Content-Type'='multipart/form-data:'),
body=list("auth"=list(email=user.email,password=user.password)))
b2 <- "http://httpbin.org/post"
POST(b2, body = "A simple text string")
POST(b2, body = list(x = "A simple text string"))
POST(url="https://usda.library.cornell.edu/user_token",httr::add_headers('accept'= '*/*','Content-Type'='multipart/form-data:'),
body=list("auth"=list(email=user.email,password=user.password)))
POST(url="https://usda.library.cornell.edu/user_token",httr::add_headers('accept'= '*/*','Content-Type'='multipart/form-data:'),
body=list(email=user.email,password=user.password))
user.password
r2 = POST(url="https://usda.library.cornell.edu/user_token",httr::add_headers('accept'= '*/*','Content-Type'='multipart/form-data:'),
body=list(email=user.email,password=user.password))
content(r2)
r2
auth = list(
email=user.email,
password=user.password,
submit = "Login!")
r2 = POST(url="https://usda.library.cornell.edu/user_token",httr::add_headers('accept'= '*/*','Content-Type'='multipart/form-data:'),
body=login, encode = "form", verbose())
r2 = POST(url="https://usda.library.cornell.edu/user_token",httr::add_headers('accept'= '*/*','Content-Type'='multipart/form-data:'),
body=auth, encode = "form", verbose())
r2
r2 = POST(url="https://usda.library.cornell.edu/user_token",
body=auth, encode = "form", verbose())
auth = list(
email=user.email,
password=user.password)
r2 = POST(url="https://usda.library.cornell.edu/user_token",
body=auth, httr::add_headers('accept' = '*/*'),
httr::content_type('multipart/form-data'))
r2
r2 = POST(url="https://usda.library.cornell.edu/user_token",
body=auth, httr::add_headers('accept' = '*/*'),
httr::content_type('multipart/form-data'), verbose())
auth = list(
email=user.email,
password=user.password,
submit = "Login!")
r2 = POST(url="https://usda.library.cornell.edu/user_token",
body=auth, httr::add_headers('accept' = '*/*'),
httr::content_type('multipart/form-data'), verbose())
r2 = POST(url="https://usda.library.cornell.edu/user_token",
body=jsonlite::toJSON(auth, pretty = T, auto_unbox = T), httr::add_headers('accept' = '*/*'),
httr::content_type('multipart/form-data'), verbose())
auth = list(
email=user.email,
password=user.password)
r2 = POST(url="https://usda.library.cornell.edu/user_token",
body=jsonlite::toJSON(auth, pretty = T, auto_unbox = T), httr::add_headers('accept' = '*/*'),
httr::content_type('multipart/form-data'), verbose())
auth = list(
auth = list(
email=user.email,
password=user.password)
)
jsonlite::toJSON(auth, pretty = T, auto_unbox = T)
r2 = POST(url="https://usda.library.cornell.edu/user_token",
body=jsonlite::toJSON(auth, pretty = T, auto_unbox = T), httr::add_headers('accept' = '*/*'),
httr::content_type('multipart/form-data'), verbose())
auth = list(
auth = list(
email=user.email,
password=user.password)
)
r2 = POST(url="https://usda.library.cornell.edu/user_token",
body=auth, httr::add_headers('accept' = '*/*'),
httr::content_type('multipart/form-data'), verbose())
auth = list(
auth = list(
email=user.email,
password=user.password)
)
jsonlite::toJSON(auth, pretty = T, auto_unbox = T)
r2 = POST(url="https://usda.library.cornell.edu/user_token",
body=jsonlite::toJSON(auth, pretty = T, auto_unbox = T), httr::add_headers('accept' = '*/*'),
httr::content_type('multipart/form-data'), verbose())
auth = list(
email=user.email,
password=user.password)
r2 = POST(url="https://usda.library.cornell.edu/user_token",
body=auth, httr::add_headers('accept' = '*/*'),
httr::content_type('multipart/form-data'), verbose())
r2 = POST(url="https://usda.library.cornell.edu/user_token",
body=authenticate(user = user.email, password = user.password), httr::add_headers('accept' = '*/*'),
httr::content_type('multipart/form-data'), verbose())
r2 = POST(url="https://usda.library.cornell.edu/user_token",
body=auth, httr::add_headers('accept' = '*/*'),
httr::content_type('multipart/form-data'), verbose())
r2 = POST(url="https://usda.library.cornell.edu/user_token",
body=auth, httr::add_headers('accept' = '*/*'),
httr::content_type('application/json'), verbose())
r2 = POST(url="https://usda.library.cornell.edu/user_token",
body=jsonlite::toJSON(auth, pretty = T, auto_unbox = T), httr::content_type('application/json'), verbose())
auth = list(auth=list(
email=user.email,
password=user.password)
)
r2 = POST(url="https://usda.library.cornell.edu/user_token",
body=jsonlite::toJSON(auth, pretty = T, auto_unbox = T), httr::content_type('application/json'), verbose())
r2
httr::content(r2,"parsed")
key_generator <- function(user.email,user.password){
key_generator <- function(user.email,user.password){
key_generator <- function(user.email,user.password){
library(usda.announcements)
key_generator(user.email="bsyben@gmail.com",user.password="n!3TLZdqLgWjDwL")
roxygen2::roxygenise()
devtools::document()
library(usda.announcements)
key_generator(user.email="bsyben@gmail.com",user.password="n!3TLZdqLgWjDwL")
key_generator <- function(user.email,user.password){
library(usda.announcements)
key_generator(user.email="bsyben@gmail.com",user.password="n!3TLZdqLgWjDwL")
?key_generator
devtools::document()
library(usda.announcements)
?release_dates
?key_generator
library(usda.announcements)
key_generator(user.email = "bsyben@gmail.com",user.password = "n!3TLZdqLgWjDwL")
